import matplotlib.pyplot as plt
import numpy as np
import math

K = [
    {"K": 0.6931471805599453},
    {'K': 0.4054651081081644},
    {'K': 0.22314355131420976},
    {'K': 0.11778303565638346},
    {'K': 0.06062462181643484},
    {'K': 0.030771658666753687},
    {'K': 0.015504186535965254},
    {'K': 0.007782140442054949},
    {'K': 0.003898640415657323},
    {'K': 0.0019512201312617493},
    {'K': 0.0009760859730554589},
    {'K': 0.0004881620795013512},
    {'K': 0.0002441108275273627},
    {'K': 0.00012206286252567737},
    {'K': 6.103329368063853e-05},
    {'K': 3.051711247318638e-05},
    {'K': 1.5258672648362398e-05},
    {'K': 7.6293654275675724e-06},
    {'K': 3.8146899896858897e-06},
    {'K': 1.9073468138254095e-06},
    {'K': 9.536738616591883e-07},
    {'K': 4.7683704451632344e-07},
    {'K': 2.384185506798576e-07},
    {'K': 1.1920928244535446e-07},
    {'K': 5.960464299903386e-08},
    {'K': 2.9802321943606113e-08},
    {'K': 1.4901161082825355e-08},
    {'K': 7.4505805691682525e-09},
    {'K': 3.72529029152302e-09},
    {'K': 1.8626451474962336e-09,},
    {'K': 9.313225741817976e-10},
    {'K': 4.6566128719931904e-10},
    {'K': 2.3283064362676457e-10},
    {'K': 1.1641532182015855e-10},
    {'K': 5.820766091177334e-11},
    {'K': 2.9103830456310187e-11},
    {'K': 1.4551915228260973e-11},
    {'K': 7.275957614156956e-12},
    {'K': 3.6379788070850955e-12},
    {'K': 1.8189894035442021e-12},
    {'K': 9.094947017725146e-13},
    {'K': 4.547473508863607e-13},
    {'K': 2.273736754432062e-13},
    {'K': 1.1368683772160957e-13},
    {'K': 5.68434188608064e-14},
    {'K': 2.8421709430403604e-14,},
    {'K': 1.4210854715201903e-14},
    {'K': 7.105427357600977e-15},
    {'K': 3.5527136788004946e-15},
    {'K': 1.7763568394002489e-15},
    {'K': 8.881784197001248e-16},
    {'K': 4.440892098500625e-16},
    {'K': 2.2204460492503128e-16},
    {"K": 1.1070218096951084e-16},
    {"K": 5.535109048475542e-17},
    {"K": 2.767554524237771e-17}
]
e = [
    {"e": 2},
    {"e": 1.5},
    {"e": 1.25},
    {"e": 1.125},
    {"e": 1.0625},
    {"e": 1.03125},
    {"e": 1.015625},
    {"e": 1.0078125},
    {"e": 1.00390625},
    {"e": 1.001953125},
    {"e": 1.0009765625},
    {"e": 1.00048828125},
    {"e": 1.000244140625},
    {"e": 1.0001220703125},
    {"e": 1.00006103515625},
    {"e": 1.000030517578125},
    {"e": 1.0000152587890625},
    {"e": 1.00000762939453125},
    {"e": 1.000003814697265625},
    {"e": 1.0000019073486328125},
    {"e": 1.00000095367431640625},
    {"e": 1.000000476837158203125},
    {"e": 1.0000002384185791015625},
    {"e": 1.00000011920928955078125},
    {"e": 1.000000059604644775390625},
    {"e": 1.0000000298023223876953125},
    {"e": 1.00000001490116119384765625},
    {"e": 1.000000007450580596923828125},
    {"e": 1.0000000037252902984619140625},
    {"e": 1.00000000186264514923095703125},
    {"e": 1.000000000931322574615478515625},
    {"e": 1.0000000004656612873077392578125},
    {"e": 1.00000000023283064365386962890625},
    {"e": 1.000000000116415321826934814453125},
    {"e": 1.0000000000582076609134674072265625},
    {"e": 1.00000000002910383045673370361328125},
    {"e": 1.000000000014551915228366851806640625},
    {"e": 1.0000000000072759576141834259033203125},
    {"e": 1.00000000000363797880709171295166015625},
    {"e": 1.000000000001818989403545856475830078125},
    {"e": 1.0000000000009094947017729282379150390625},
    {"e": 1.00000000000045474735088646411895751953125},
    {"e": 1.000000000000227373675443232059478759765625},
    {"e": 1.0000000000001136868377216160297393798828125},
    {"e": 1.00000000000005684341886080801486968994140625},
    {"e": 1.000000000000028421709430404007434844970703125},
    {"e": 1.0000000000000142108547152020037174224853515625},
    {"e": 1.00000000000000710542735760100185871124267578125},
    {"e": 1.000000000000003552713678800500929355621337890625},
    {"e": 1.0000000000000017763568394002504646778106689453125},
    {"e": 1.00000000000000088817841970012523233890533447265625},
    {"e": 1.000000000000000444089209850062616169452667236328125},
    {"e": 1.0000000000000002220446049250313080847263336181640625},
    {"e": 1.00000000000000011102230246251565404236316680908203125},
    {"e": 1.000000000000000055511151231257827021181583404541015625},
    {"e": 1.0000000000000000277555756156289135105907917022705078125},
    {"e": 1.000000000000000013877787807814131670951320171356201171875},
    {"e": 1.0000000000000000069388939039070658354756600856781005859375},
    {"e": 1.00000000000000000346944695195353291773783004283905029296875},
    {"e": 1.000000000000000001734723475976766458868915021419525146484375},
    {"e": 1.0000000000000000008673617379883832294344575107097625732421875}
]

def Search(x):
    for i in range(len(K)):
        if K[i]["K"] <= x:
            return i

def Iteration(x_values):
    results = []
    for x in x_values:
        x1 = x
        y = 1

        while x1 > 0:
            k = Search(x1)
            
            if k is None:
                break

            x1 -= K[k]["K"]
            y *= e[k]["e"]

        result = (1 + x1) * y
        results.append(result)

    return results


def Values(start, end, delta):
    x_values = [start + delta * i for i in range(int((end - start) / delta) + 1)]
    return x_values

def CalculateExponential(start, end, delta):
    return Iteration(Values(start, end, delta))

def ElevateX(array_values):
    results = []
    for x in array_values:
        result = math.exp(x)
        results.append(result)
    return results


def Diferences(solutions, results):
    diferences = []
    for machine_value, real_value in zip(solutions, results):
        diference = abs(machine_value - real_value)
        diferences.append(diference)
    return diferences

start = 0
end = 10
delta = 0.05
solutions = CalculateExponential(start, end, delta)
array_values = Values(start, end, delta)

results = ElevateX(array_values)
diferences = Diferences(solutions, results)

plt.figure().set_figwidth(10)
plt.plot(array_values, diferences, label='|e^x - Nice(x)|')
plt.xlabel('x')
plt.ylabel('Error')
plt.title('Nice numbers with LUT vs e^x')
plt.legend()
plt.savefig('Nice.png', dpi=300, bbox_inches='tight')
